<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Angular on 資深菜鳥 Nick</title>
    <link>https://north13.github.io/categories/angular/</link>
    <description>Recent content in Angular on 資深菜鳥 Nick</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Dec 2024 10:06:49 +0800</lastBuildDate>
    <atom:link href="https://north13.github.io/categories/angular/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Angular 和 Vue 的響應式狀態管理</title>
      <link>https://north13.github.io/post/angular%E5%92%8Cvue%E7%9A%84%E9%9F%BF%E6%87%89%E5%BC%8F%E7%8B%80%E6%85%8B%E7%AE%A1%E7%90%86/</link>
      <pubDate>Fri, 27 Dec 2024 10:06:49 +0800</pubDate>
      <guid>https://north13.github.io/post/angular%E5%92%8Cvue%E7%9A%84%E9%9F%BF%E6%87%89%E5%BC%8F%E7%8B%80%E6%85%8B%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;p&gt;之前趁著 &lt;code&gt;Udemy&lt;/code&gt; 黑五活動買了些有興趣的課程來進修，加上 &lt;code&gt;YT&lt;/code&gt; 上免費的課程，聽聽不同的講師會有不同的收穫，就像是看醫生不要只看一間，不同的醫生看或許會有不同的見解。&lt;/p&gt;&#xA;&lt;p&gt;在自學時光是 &lt;code&gt;Vue&lt;/code&gt; 就看了三個不同的教學影片，對於 &lt;code&gt;ref&lt;/code&gt;、&lt;code&gt;reactive&lt;/code&gt; 雖無實務經驗，但有一定程度的瞭解。之前工作上使用的框架是 &lt;code&gt;Angular&lt;/code&gt; 且版本 &lt;strong&gt;&amp;lt; 16&lt;/strong&gt; , 對於 &lt;code&gt;Signals&lt;/code&gt; 的應用很模糊，嘗試用 &lt;code&gt;Vue&lt;/code&gt; 的 &lt;code&gt;ref&lt;/code&gt; 去解釋 &lt;code&gt;Angular&lt;/code&gt; 的 &lt;code&gt;Signals&lt;/code&gt; 好像一切都說得過去了！&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;angular-signals-的用途&#34;&gt;&lt;strong&gt;Angular Signals 的用途&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;Angular&lt;/code&gt; 引入 &lt;strong&gt;Signals&lt;/strong&gt; 是為了解決 &lt;strong&gt;響應式狀態管理&lt;/strong&gt; 的問題。傳統上 &lt;code&gt;Angular&lt;/code&gt; 主要使用 &lt;code&gt;RxJS&lt;/code&gt; 的 &lt;code&gt;Observables&lt;/code&gt; 或 &lt;code&gt;Component State&lt;/code&gt; 來管理狀態，但這種方式可能導致程式碼複雜性增加、追蹤數據變化困難。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Signals 主要用途：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;響應式狀態管理：&lt;/strong&gt; &lt;code&gt;Signals&lt;/code&gt; 允許你輕鬆追蹤和響應狀態變化，無需手動訂閱或處理變更檢測。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;效能提升：&lt;/strong&gt; &lt;code&gt;Signals&lt;/code&gt; 會在狀態變化時自動觸發 UI 更新，並只更新受影響的部分，而非整體重新渲染，這比傳統變更檢測更高效。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;同步數據流：&lt;/strong&gt; 和 &lt;code&gt;RxJS&lt;/code&gt; 的異步操作不同，&lt;code&gt;Signals&lt;/code&gt; 提供 &lt;strong&gt;同步&lt;/strong&gt; 的數據流，使用起來更加直觀。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;預測性：&lt;/strong&gt; &lt;code&gt;Angular Signals&lt;/code&gt; 透過明確的讀寫 &lt;code&gt;API&lt;/code&gt;，讓數據變更更易於預測和調試。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;signal&lt;/span&gt; } &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@angular/core&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MyComponent&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;signal&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;increment&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;set&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;signal()&lt;/code&gt; 用於建立可追蹤的響應式狀態。&lt;/li&gt;&#xA;&lt;li&gt;使用 &lt;code&gt;.set()&lt;/code&gt;、&lt;code&gt;.update()&lt;/code&gt; 來修改值，使用 &lt;code&gt;signal()&lt;/code&gt; 本身讀取當前值。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;vue-3-ref-的用途&#34;&gt;&lt;strong&gt;Vue 3 ref 的用途&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;Vue 3&lt;/code&gt; 的 &lt;code&gt;ref&lt;/code&gt; 也用於 響應式數據 管理。&lt;code&gt;ref&lt;/code&gt; 會將一個變數包裹成 響應式對象，當數據變化時，&lt;code&gt;Vue&lt;/code&gt; 會自動追蹤變更並更新 UI。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
